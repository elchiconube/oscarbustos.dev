---
interface TimelineEntry {
  year: string;
  content: string | string[];
  highlight?: boolean;
}

interface Props {
  entries: TimelineEntry[];
}

const { entries } = Astro.props;
---

<div class='timeline-container'>
  <div class='timeline-line'></div>
  <div class='timeline-entries'>
    {
      entries.map((entry) => (
        <div class='timeline-entry'>
          <div class={`timeline-title ${entry.highlight ? 'highlight' : ''}`}>
            {entry.year}
          </div>
          <div class='timeline-body'>
            {Array.isArray(entry.content) ? (
              entry.content.map((paragraph) => <p>{paragraph}</p>)
            ) : (
              <p>{entry.content}</p>
            )}
          </div>
        </div>
      ))
    }
  </div>
</div>

<style>
  .timeline-container {
    position: relative;
    width: 100%;
    padding: 4rem 0;
  }

  .timeline-line {
    position: absolute;
    left: 50%;
    transform-origin: top;
    width: 4px;
    height: 100%;
    background: var(--text-color);
    top: 0;
    view-timeline-name: --reveal;
    animation: grow-line linear both;
    animation-timeline: --reveal;
    animation-range: entry 0% cover 30%;
  }

  @keyframes grow-line {
    from {
      transform: translateX(-50%) scaleY(0);
      opacity: 0;
    }
    to {
      transform: translateX(-50%) scaleY(1);
      opacity: 1;
    }
  }

  .timeline-entries {
    max-width: 1000px;
    margin: 0 auto;
    position: relative;
  }

  .timeline-entry {
    width: calc(50% - 40px);
    margin: 4rem 0;
    position: relative;
    padding: 0 20px;
    view-timeline-name: --reveal;
    animation: fade-slide linear both;
    animation-timeline: view();
    animation-range: entry 5% cover 25%;
  }

  @keyframes fade-slide {
    from {
      opacity: 0;
      transform: translateY(100px);
      filter: blur(5px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
      filter: blur(0);
    }
  }

  .timeline-entry:nth-child(odd) {
    float: left;
    clear: both;
    text-align: right;
    transform-origin: right;
  }

  .timeline-entry:nth-child(even) {
    float: right;
    clear: both;
    text-align: left;
    transform-origin: left;
  }

  .timeline-title {
    font-size: 1.75rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    color: var(--text-color);
    position: relative;
    font-family: var(--fraunces-font);
  }

  .timeline-title::before {
    content: '';
    position: absolute;
    width: 12px;
    height: 12px;
    border: 3px solid var(--border-color);
    background-color: var(--background);
    border-radius: 50%;
    top: 50%;
    animation: pop-in linear both;
    animation-timeline: view();
    animation-range: entry 10% cover 30%;
    box-shadow:
      0 0 0 4px var(--background),
      0 0 0 5px var(--border-color);
  }

  @keyframes pop-in {
    0% {
      transform: translateY(-50%) scale(0) rotate(-180deg);
      opacity: 0;
    }
    50% {
      transform: translateY(-50%) scale(1.2) rotate(0deg);
      opacity: 0.5;
    }
    100% {
      transform: translateY(-50%) scale(1) rotate(0deg);
      opacity: 1;
    }
  }

  .timeline-entry:nth-child(odd) .timeline-title::before {
    right: -46px;
  }

  .timeline-entry:nth-child(even) .timeline-title::before {
    left: -46px;
  }

  .timeline-title.highlight::before {
    width: 20px;
    height: 20px;
    border-width: 4px;
    border-color: var(--accent-color);
    box-shadow:
      0 0 0 6px var(--background),
      0 0 0 7px var(--accent-color),
      0 0 15px var(--accent-color);
  }

  .timeline-entry:nth-child(odd) .timeline-title.highlight::before {
    transform: translate(4px, -50%) scale(0);
  }

  .timeline-entry:nth-child(even) .timeline-title.highlight::before {
    transform: translate(-4px, -50%) scale(0);
  }

  .timeline-body {
    color: var(--text-secondary);
    line-height: 1.6;
    transition: transform 0.3s ease;
  }

  .timeline-entry:hover .timeline-body {
    transform: scale(1.02);
  }

  .timeline-body p {
    margin: 0 0 1rem 0;
    font-size: 1rem;
  }

  .timeline-body p:last-child {
    margin-bottom: 0;
  }

  @media (max-width: 768px) {
    .timeline-container {
      padding: 2rem 0;
    }

    .timeline-line {
      left: 0;
    }

    .timeline-entries {
      padding-left: 40px;
      margin: 0;
    }

    .timeline-entry {
      width: 100%;
      margin: 2rem 0;
      padding: 0 20px;
      float: none;
      text-align: left;
      transform-origin: left;
    }

    .timeline-entry:nth-child(odd),
    .timeline-entry:nth-child(even) {
      float: none;
      text-align: left;
    }

    .timeline-title::before {
      left: -46px !important;
    }

    .timeline-title.highlight::before {
      transform: translate(-4px, -50%) scale(0) !important;
    }
  }

  @media (max-width: 480px) {
    .timeline-entries {
      padding-left: 30px;
    }

    .timeline-entry {
      margin: 1.5rem 0;
    }

    .timeline-title {
      font-size: 1.5rem;
    }

    .timeline-title::before {
      left: -36px !important;
    }

    .timeline-body {
      font-size: 0.9rem;
    }
  }

  .timeline-entries::after {
    content: '';
    display: table;
    clear: both;
  }
</style>
