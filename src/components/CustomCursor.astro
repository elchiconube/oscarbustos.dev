<div id="custom-cursor"></div>
<click-spark></click-spark>

<style>
  * {
    cursor: none !important;
  }

  #custom-cursor {
    width: 8px;
    height: 8px;
    background-color: var(--cursor-color);
    border-radius: 50%;
    position: fixed;
    pointer-events: none;
    z-index: 9999;
    transition: background-color 0.3s ease;
  }

  :root[data-theme="light"] {
    --cursor-color: #000000;
    --click-spark-color: #000000;
  }

  :root[data-theme="dark"] {
    --cursor-color: #ffffff;
    --click-spark-color: #ffffff;
  }
</style>

<script>
  // Definición del Web Component ClickSpark
  class ClickSpark extends HTMLElement {
    constructor() {
      super();
      this.attachShadow({ mode: "open" });
    }
    
    connectedCallback() {
      this.shadowRoot.innerHTML = this.createSpark();
      this.svg = this.shadowRoot.querySelector("svg");
      document.addEventListener("click", this);
    }
    
    disconnectedCallback() {
      document.removeEventListener("click", this);
    }
    
    handleEvent(e) {
      this.setSparkPosition(e);
      this.animateSpark();
    }
    
    animateSpark() {
      let sparks = [...this.svg.children];
      let size = parseInt(sparks[0].getAttribute("y1"));
      let offset = size / 2 + "px";
      let keyframes = (i) => {
        let deg = `calc(${i} * (360deg / ${sparks.length}))`;
        return [
          {
            strokeDashoffset: size * 3,
            transform: `rotate(${deg}) translateY(${offset})`
          },
          {
            strokeDashoffset: size,
            transform: `rotate(${deg}) translateY(0)`
          }
        ];
      };
      let options = {
        duration: 660,
        easing: "cubic-bezier(0.25, 1, 0.5, 1)",
        fill: "forwards"
      };
      sparks.forEach((spark, i) => spark.animate(keyframes(i), options));
    }
    
    setSparkPosition(e) {
      this.style.left = e.pageX - this.clientWidth / 2 + "px";
      this.style.top = e.pageY - this.clientHeight / 2 + "px";
    }
    
    createSpark() {
      return `
        <style>
          :host {
            position: absolute;
            pointer-events: none;
            z-index: 9998;
          }
        </style>
        <svg width="30" height="30" viewBox="0 0 100 100" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" stroke="var(--click-spark-color, currentcolor)" transform="rotate(-20)">
          ${Array.from(
            { length: 8 },
            (_) =>
              `<line x1="50" y1="30" x2="50" y2="4" stroke-dasharray="30" stroke-dashoffset="30" style="transform-origin: center" />`
          ).join("")}
        </svg>
      `;
    }
  }
  
  // Registrar el Web Component
  customElements.define("click-spark", ClickSpark);

  // Manejar el cursor personalizado
  const cursor = document.querySelector('#custom-cursor');

  document.addEventListener('mousemove', (e) => {
    if (cursor) {
      cursor.style.transform = `translate(${e.clientX}px, ${e.clientY}px)`;
    }
  });

  // Opcional: Añadir efecto de escala al hacer click
  document.addEventListener('mousedown', () => {
    cursor.style.transform += ' scale(0.8)';
  });

  document.addEventListener('mouseup', () => {
    cursor.style.transform = cursor.style.transform.replace(' scale(0.8)', '');
  });
</script>