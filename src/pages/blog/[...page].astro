---
import type { Page, GetStaticPathsOptions } from 'astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import MainLayout from '@/layouts/MainLayout.astro';
import { ViewTransitions, fade } from 'astro:transitions';
import FormattedDate from '@/components/FormattedDate.astro';
import Container from '@/components/Container.astro';
import { ArrowLeft, ArrowRight, ArrowUpRight } from '@phosphor-icons/react';
import Heading from '@/components/Heading.astro';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = (await getCollection('blog')).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );

  return paginate(posts, { pageSize: 6 });
}

interface Props {
  page: Page<CollectionEntry<'blog'>>;
}

const { page } = Astro.props;
---

<MainLayout>
  <ViewTransitions />
  <Container>
    <Heading title='Blog' description='Homines, dum docent, discunt' />
    <section>
      <ul class='posts-list' transition:animate={fade({ duration: '1s' })}>
        {
          page.data.map((post) => (
            <li class='post-item'>
              <a href={`/blog/${post.id}/`}>
                <time class='date'>
                  <FormattedDate date={post.data.pubDate} />
                </time>
                <h2 class='title'>
                  {post.data.title} <ArrowUpRight size={16} />{' '}
                </h2>
                <p>{post.data.description}</p>
              </a>
            </li>
          ))
        }
      </ul>

      {
        page.lastPage > 1 && (
          <nav class='pagination'>
            {page.url.prev && (
              <a href={page.url.prev}>
                <ArrowLeft size={18} />
                Previous
              </a>
            )}
            {page.url.next && (
              <a href={page.url.next}>
                Next <ArrowRight size={18} />
              </a>
            )}
          </nav>
        )
      }
    </section>
  </Container>
</MainLayout>

<style>
  .posts-list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 18px;
  }

  .post-item {
    background-color: var(--card-bg);
    transition: all 100ms ease-in-out;
    position: relative;
    border: 1px solid transparent;
    border-radius: 4px;

    a {
      height: 100%;
      padding: 24px;
      display: block;

      h2 {
        font-size: 24px;
        margin-bottom: 16px;
      }
    }

    &:hover {
      background-color: var(--card-bg-hover);
      border-color: var(--border-color);
    }

    .date {
      font-size: 12px;
      color: var(--light-gray);
    }

    p {
      font-size: 14px;
    }
  }

  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 32px 0;
    gap: 16px;

    a {
      display: flex;
      align-items: center;
      gap: 8px;
      font-family: var(--fraunces-font);
    }

    span {
      color: var(--light-gray);
    }
  }
</style>
